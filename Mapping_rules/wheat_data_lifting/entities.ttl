@prefix xrr: <http://i3s.unice.fr/xr2rml#> .
@prefix rr:  <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl:    <http://www.w3.org/2002/07/owl#>.
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .

@prefix bibo:   <http://purl.org/ontology/bibo/> .
@prefix dce:    <http://purl.org/dc/elements/1.1/>.
@prefix dct:    <http://purl.org/dc/terms/>.
@prefix fabio:  <http://purl.org/spar/fabio/> .
@prefix foaf:   <http://xmlns.com/foaf/0.1/>.
@prefix frbr:   <http://purl.org/vocab/frbr/core#>.
@prefix oa:     <http://www.w3.org/ns/oa#>.
@prefix prov:   <http://www.w3.org/ns/prov#>.
@prefix schema: <http://schema.org/>.
@prefix skos:	<http://www.w3.org/2004/02/skos/core#>.

@prefix ncbi: <http://identifiers.org/taxonomy/> .
@prefix bioT: <http://purl.org/biotop/biotop.owl#>.
@prefix d2kab: <http://ns.inria.fr/d2kab/> .

<#Taxon>
	a rr:TripleMap;
	xrr:logicalSource [
		xrr:query """db.Entities.find({ "entity_type" : "taxon"})""";
	];
	
	rr:subjectMap [ 
		xrr:reference "$.reference" ;
		rr:class d2kab:Taxon;
	];
	
	rr:predicateObjectMap [
		rr:predicate skos:prefLabel;
		rr:objectMap [
			rr:template "{$.label}";
			rr:termType rr:Literal;
			rr:datatype xsd:string;
		];
	].
	
<#Gene>
	a rr:TripleMap;
	xrr:logicalSource [
		xrr:query """db.Entities.find({ "entity_type" : "gene"})""";
	];
	
	rr:subjectMap [ 
		xrr:reference "$.reference" ;
		rr:class d2kab:Gene;
	];
	
	rr:predicateObjectMap [
		rr:predicate skos:prefLabel;
		rr:objectMap [
			rr:template "{$.label}";
			rr:termType rr:Literal;
			rr:datatype xsd:string;
		];
	].
	
<#Phenotype>
	a rr:TripleMap;
	xrr:logicalSource [
		xrr:query """db.Entities.find({ "entity_type" : "phenotype"})""";
	];
	
	rr:subjectMap [ 
		xrr:reference "$.reference" ;
		rr:class d2kab:Phenotype;
	];
	
	rr:predicateObjectMap [
		rr:predicate skos:prefLabel;
		rr:objectMap [
			rr:template "{$.label}";
			rr:termType rr:Literal;
			rr:datatype xsd:string;
		];
	].
	
<#Variety>
	a rr:TripleMap;
	xrr:logicalSource [
		xrr:query """db.Entities.find({ "entity_type" : "variety"})""";
	];
	
	rr:subjectMap [ 
		xrr:reference "$.reference" ;
		rr:class d2kab:Variety;
	];
	
	rr:predicateObjectMap [
		rr:predicate skos:prefLabel;
		rr:objectMap [
			rr:template "{$.label}";
			rr:termType rr:Literal;
			rr:datatype xsd:string;
		];
	].
	
<#Marker>
	a rr:TripleMap;
	xrr:logicalSource [
		xrr:query """db.Entities.find({ "entity_type" : "marker"})""";
	];
	
	rr:subjectMap [ 
		xrr:reference "$.reference" ;
		rr:class d2kab:Marker;
	];
	
	rr:predicateObjectMap [
		rr:predicate skos:prefLabel;
		rr:objectMap [
			xrr:reference "$.label";
			rr:termType rr:Literal;
			rr:datatype xsd:string;
		];
	].